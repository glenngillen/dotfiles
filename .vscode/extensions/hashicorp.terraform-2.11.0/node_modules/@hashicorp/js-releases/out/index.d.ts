interface Build {
    url: string;
    filename: string;
}
export declare class Release {
    name: string;
    version: string;
    builds?: any[];
    shasums?: string;
    shasums_signature?: string;
    shasums_signatures?: any[];
    constructor(release: any);
    getBuild(platform: string, arch: string): Build;
    download(downloadUrl: string, installPath: string, identifier: string): Promise<void>;
    verify(pkg: string, buildName: string): Promise<void>;
    calculateFileSha256Sum(path: string): Promise<string>;
    downloadSha256Sum(buildName: string): Promise<string>;
    unpack(directory: string, pkgName: string): Promise<void>;
}
export declare function getRelease(product: string, version?: string, userAgent?: string, includePrerelease?: boolean): Promise<Release>;
export {};
